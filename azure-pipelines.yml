# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
    - '*-servarr'


pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/FluentMigrator.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  MajorVersion: '3.2.2'
  MinorVersion: $[counter('minorVersion', 1)]
  FluentVersion: '$(majorVersion).$(minorVersion)'

steps:
- task: NuGetToolInstaller@1

- task: UseDotNet@2
  inputs:
    version: '8.x'

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:Version="$(FluentVersion)"'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    diagnosticsEnabled: true

- task: CmdLine@2
  inputs:
    script: 'dotnet pack $(Build.SourcesDirectory)\FluentMigrator.sln --output $(Build.ArtifactStagingDirectory) --include-symbols -p:Configuration=$(buildConfiguration) -p:Version=$(FluentVersion) --verbosity Detailed'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'src/FluentMigrator.Console/FluentMigrator.Console.csproj'
    arguments: '-c $(buildConfiguration) -r any -o "$(Build.ArtifactStagingDirectory)/publish/tools/net48/any" -p:Platform=AnyCpu -p:TargetFramework=net48 -p:Version=$(FluentVersion)'
    zipAfterPublish: false
    modifyOutputPath: false

- task: CopyFiles@2
  inputs:
    SourceFolder: 'publish'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/publish'

- script: nuget.exe pack $(Build.ArtifactStagingDirectory)/publish/FluentMigrator.Console.nuspec -NonInteractive -OutputDirectory $(Build.ArtifactStagingDirectory) -version $(FluentVersion)
  displayName: NuGet pack FluentMigrator.Console

- script: nuget.exe pack $(Build.ArtifactStagingDirectory)/publish/FluentMigrator.Tools.nuspec -NonInteractive -OutputDirectory $(Build.ArtifactStagingDirectory) -version $(FluentVersion)
  displayName: NuGet pack FluentMigrator.Tools

- task: DotNetCoreCLI@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '7ab38f4e-5a57-4d70-84f4-94dd9bc5d6df/323efe4e-c7d8-4bcd-acfe-5afb38d520bf'
